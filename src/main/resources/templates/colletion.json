{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "Doa√ß√µes API - Entidade Filantr√≥pica",
		"description": "Cole√ß√£o completa para testar a API de Doa√ß√µes com todos os endpoints: Incluir, Consultar e Deletar doa√ß√µes.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "123456789"
	},
	"item": [
		{
			"name": "‚ú® Incluir Doa√ß√£o",
			"item": [
				{
					"name": "Incluir Doa√ß√£o Completa",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"Jo√£o Silva\",\n  \"cpfDoador\": \"12345678901\",\n  \"valor\": 100.50,\n  \"dataDoacao\": \"2024-12-15T10:30:00\",\n  \"emailDoador\": \"joao.silva@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Inclui uma nova doa√ß√£o com todos os campos preenchidos."
					},
					"response": []
				},
				{
					"name": "Incluir Doa√ß√£o sem Data (Data Atual)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"Maria Santos\",\n  \"cpfDoador\": \"98765432100\",\n  \"valor\": 250.00,\n  \"emailDoador\": \"maria.santos@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Inclui doa√ß√£o sem especificar data (usar√° data/hora atual)."
					},
					"response": []
				},
				{
					"name": "Incluir Doa√ß√£o sem Email",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"Pedro Oliveira\",\n  \"cpfDoador\": \"11122233344\",\n  \"valor\": 75.25\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Inclui doa√ß√£o apenas com campos obrigat√≥rios (email √© opcional)."
					},
					"response": []
				}
			],
			"description": "Endpoints para incluir novas doa√ß√µes"
		},
		{
			"name": "üîç Consultar Doa√ß√µes",
			"item": [
				{
					"name": "Consultar Todas as Doa√ß√µes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Retorna todas as doa√ß√µes ordenadas por data (mais recentes primeiro)."
					},
					"response": []
				},
				{
					"name": "Consultar Doa√ß√£o por ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes",
								"1"
							]
						},
						"description": "Busca uma doa√ß√£o espec√≠fica pelo ID. Altere o '1' pelo ID desejado."
					},
					"response": []
				},
				{
					"name": "Consultar Doa√ß√µes por CPF",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes/cpf/12345678901",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes",
								"cpf",
								"12345678901"
							]
						},
						"description": "Busca todas as doa√ß√µes de um CPF espec√≠fico."
					},
					"response": []
				},
				{
					"name": "Consultar Doa√ß√µes por Nome",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes/nome/Jo√£o",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes",
								"nome",
								"Jo√£o"
							]
						},
						"description": "Busca doa√ß√µes por nome do doador (busca parcial, case insensitive)."
					},
					"response": []
				},
				{
					"name": "Calcular Total de Doa√ß√µes por CPF",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes/total/cpf/12345678901",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes",
								"total",
								"cpf",
								"12345678901"
							]
						},
						"description": "Calcula o valor total doado por um CPF espec√≠fico."
					},
					"response": []
				}
			],
			"description": "Endpoints para consultar doa√ß√µes"
		},
		{
			"name": "üóëÔ∏è Deletar Doa√ß√£o",
			"item": [
				{
					"name": "Deletar Doa√ß√£o por ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes",
								"1"
							]
						},
						"description": "Remove uma doa√ß√£o pelo ID. Altere o '1' pelo ID que deseja deletar."
					},
					"response": []
				}
			],
			"description": "Endpoints para deletar doa√ß√µes"
		},
		{
			"name": "üß™ Testes de Valida√ß√£o",
			"item": [
				{
					"name": "‚ùå Valor Inv√°lido (Negativo)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"Teste Valor Negativo\",\n  \"cpfDoador\": \"11111111111\",\n  \"valor\": -10.00,\n  \"emailDoador\": \"teste@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Teste que deve retornar erro 400 - valor n√£o pode ser negativo."
					},
					"response": []
				},
				{
					"name": "‚ùå Valor Zero",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"Teste Valor Zero\",\n  \"cpfDoador\": \"22222222222\",\n  \"valor\": 0.00,\n  \"emailDoador\": \"teste.zero@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Teste que deve retornar erro 400 - valor deve ser maior que 0,00."
					},
					"response": []
				},
				{
					"name": "‚ùå CPF Inv√°lido",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"Teste CPF Inv√°lido\",\n  \"cpfDoador\": \"123\",\n  \"valor\": 50.00,\n  \"emailDoador\": \"teste.cpf@email.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Teste que deve retornar erro 400 - CPF deve ter 11 d√≠gitos."
					},
					"response": []
				},
				{
					"name": "‚ùå Campos Obrigat√≥rios Nulos",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"\",\n  \"cpfDoador\": null,\n  \"valor\": null,\n  \"emailDoador\": \"email-sem-arroba\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Teste que deve retornar m√∫ltiplos erros de valida√ß√£o."
					},
					"response": []
				},
				{
					"name": "‚ùå Email Inv√°lido",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nomeDoador\": \"Teste Email Inv√°lido\",\n  \"cpfDoador\": \"33333333333\",\n  \"valor\": 100.00,\n  \"emailDoador\": \"email-invalido\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/doacoes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes"
							]
						},
						"description": "Teste que deve retornar erro 400 - formato de email inv√°lido."
					},
					"response": []
				},
				{
					"name": "‚ùå Consultar ID Inexistente",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes/999999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes",
								"999999"
							]
						},
						"description": "Teste que deve retornar 404 - doa√ß√£o n√£o encontrada."
					},
					"response": []
				},
				{
					"name": "‚ùå Deletar ID Inexistente",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/doacoes/999999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"doacoes",
								"999999"
							]
						},
						"description": "Teste que deve retornar 404 - doa√ß√£o n√£o encontrada para deletar."
					},
					"response": []
				}
			],
			"description": "Testes para verificar se as valida√ß√µes est√£o funcionando corretamente"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}